import{Bindings}from"./../core-bindings.js";let currentTab="placeholders";const debugerUI='\n    <link rel="stylesheet" href="../src/debugger/style.css" id="ltd-styles" />\n    <div class="ltd-menu">\n        <span onclick="Debug.garbageCollector()" title="Garbarge Collector" class="ltd-menu-icon">&#x1F5D1;</span>\n        <span onclick="console.clear()" title="Clean console" class="ltd-menu-icon">&#x1f6c7;</span>\n        <span onclick="Debug.renderInConsole()" title="Dump in Console" class="ltd-menu-icon">&#10149;</span>\n        \x3c!--\n        <span onclick="Debug.updateDebugerUI()" title="Refresh Tab" class="ltd-menu-icon">&#x21bb;</span>\n        --\x3e\n        <span onclick="Template.create(\'#view\')" title="Create Template" class="ltd-menu-icon ltd-menu-bind">&#8766;</span>\n        <span onclick="Template.destroy(\'#view\')" title="Destroy Template" class="ltd-menu-icon ltd-menu-unbind">&#8660;</span>\n        <span onclick="Debug.loadTab(\'placeholders\')" id="ltd-menu-placeholders" active>Placeholders</span>\n        <span onclick="Debug.loadTab(\'elements\')" id="ltd-menu-elements">Elements</span>\n        <span onclick="Debug.loadTab(\'events\')" id="ltd-menu-events">Events</span>\n        <span onclick="Debug.loadTab(\'iterators\')" id="ltd-menu-iterators">Iterators</span>\n        <span onclick="Debug.loadTab(\'models\')" id="ltd-menu-models">Models</span>\n    </div>\n    <div id ="ltd-tab-viewport"></div>\n';let debuggerContainer=document.createElement("div");debuggerContainer.id="ltd-container",document.body.appendChild(debuggerContainer);let debugComponent=debuggerContainer.attachShadow({mode:"open"});debugComponent.innerHTML=debugerUI;const Debug={select:function(e){let n=null;e.nodeType===Node.ELEMENT_NODE?n=e:e.nodeType===Node.TEXT_NODE&&(n=e.parentNode),n.setAttribute("ltd-selected",!0)},garbageCollector:()=>"function"!=typeof window.gc?(console.log("Garbage Collector API is not available!"),console.log('Relaunch Chrome using : chrome.exe --js-flags="--expose-gc"'),!1):(console.log("Running Garbage Collector..."),console.log("( Console  must be clean to garantee suucces )"),window.gc(),!0),showDebuger:function(){},updateDebugerUI:function(){Debug.loadTab(currentTab)},loadTab:function(e){currentTab=e=e||currentTab;let n=debugComponent.querySelectorAll(".ltd-menu")[0];Array.from(n.children).forEach(e=>e.removeAttribute("active")),n.querySelectorAll("#ltd-menu-"+e)[0].setAttribute("active",!0),Debug.tabs[e]()},renderInConsole:function(){console.log("************************************"),console.log("Dumping Bindings - "+currentTab),"elements"===currentTab?console.log(Bindings.elements):"placeholders"===currentTab?console.log(Bindings.placeholders):"events"===currentTab?console.log(Bindings.events):"iterators"===currentTab&&console.log(Bindings.iterators),console.log("************************************")},tabs:{elements:function(){let e="";e+='<div id="ltd-tab-elements">',e+="  <table>",Bindings.elements.forEach((n,t)=>{let o=t.nodeType===Node.TEXT_NODE?"textNode":"elementNode";e+="   <tr>",e+='       <td onmouseover="Debug.select(this)">'+o+"</td>",e+="       <td>"+JSON.stringify(n)+"</td>",e+="   </tr>"}),e+="  </table>",e+="</div>",debugComponent.getElementById("ltd-tab-viewport").innerHTML=e},placeholders:function(){let e="";e+='<div id="ltd-tab-placeholders">',e+="   <table>";for(let n in Bindings.placeholders){e+="   <tr>",e+="       <td>"+n+"</td>";let t="";Bindings.placeholders[n].forEach(e=>{t+="<span>",t+=e.nodeType===Node.TEXT_NODE?"textNode":"elementNode",t+="</span>"}),e+="       <td>"+t+"</td>",e+="   </tr>"}e+="   </table>",e+="</div>",debugComponent.getElementById("ltd-tab-viewport").innerHTML=e},events:function(){let e="";e+='<div id="ltd-tab-events">',e+="  <table>",Bindings.events.forEach((n,t)=>{let o=t.nodeType===Node.TEXT_NODE?"textNode":"elementNode";e+="   <tr>",e+="       <td>"+o+"</td>",e+="       <td>",Object.keys(n).forEach(n=>{e+="     <span>on-"+n+"</span>"}),e+="       </td>",e+="   </tr>"}),e+="  </table>",e+="</div>",debugComponent.getElementById("ltd-tab-viewport").innerHTML=e},iterators:function(){console.log(Bindings.iterators)}}};window.Debug=Debug;export{Debug};