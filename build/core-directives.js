import{Config}from"./core-config.js";import{Bindings}from"./core-bindings.js";import{Bind}from"./core-bind.js";import{Keypath}from"./core-keypath.js";const Directives={value:{bind:function(e,i,t){Bind.event(e,"input",n=>this.publish(e,i,t,n.target.value))},subscribe:function(e,i,t,n){e.value=n||""},publish:function(e,i,t,n){let r=Keypath.resolveContext(i);r?r.context[r.property]=n:console.log("model or property does mot exist")}},on:{bind:function(e,i,t){Bind.event(e,t[1],n=>this.publish(e,i,t,n))},publish:function(e,i,t,n){Keypath.resolve(i)(n)}},if:{subscribe:function(e,i,t,n){"string"==typeof n&&0===n.length&&(n=!1),n?e.style.display="":e.style.setProperty("display","none","important")}},for:{block:!0,bind:function(e,i,t){if(console.log("binding for-"+t[1]),!Keypath.exist(i))throw new Error("directives.for(): model does not exist!!! "+placeholder);Bindings.iterators[i]={element:e,state:Keypath.resolve(i).slice(0),token:t[1],html:e.innerHTML,index:e.getAttribute(Config.directivePrefix+":index")},e.innerHTML=""},subscribe:function(e,i,t,n){_DEBUG_.orange("SUBSCRIBE for-"+t[1],n),n=Keypath.resolve(i);let r=Bindings.iterators[i],o=r.state;r.state=n.slice(0);let l=[];for(let e=0;e<n.length;e++)n[e]!==o[e]&&l.push(e);let s="";if(1===l.length&&l[0]===n.length-1){let t=l[0],n=r.html;if(void 0!==r.index){let e=new RegExp(Config._replacePlaceholdersExpString.replace("__PLACEHOLDER__",r.index),"g");n=n.replace(e,t)}s+=n.replace(r.token,i+"."+t),e.appendChild(document.createElement("div")).innerHTML=s}else{e.innerHTML="";for(let e=0;e<n.length;e++){let t=r.html;if(void 0!==r.index){let i=new RegExp(Config._replacePlaceholdersExpString.replace("__PLACEHOLDER__",r.index),"g");t=t.replace(i,e)}s+=t.replace(r.token,i+"."+e)}e.innerHTML=s}}}},Directive={isDirectiveName:function(e){return e.split("-")[0]===Config.directivePrefix},isBlocking:function(e){const i=e.split("-"),t=i[0]===Config.directivePrefix?i[1]:e;if(!t.length)throw new Error("Directive.isBlocking() : Directive does nit exist ("+e+")");return!0===Directives[t].block},exist:function(e){const i=e.split("-"),t=i[0]===Config.directivePrefix?i[1]:e;return!!t.length&&Directives.hasOwnProperty(t)}};export{Directive,Directives};