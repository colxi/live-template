import{Bindings}from"./core-bindings.js";import{Util}from"./core-util.js";const Config={directivePrefix:"pg",placeholderDelimitiers:["{","}"],modelsNamesExtension:".js",viewsNamesExtension:".html",modelsPath:"./models/",viewsPath:"./views/",_getPlaceholdersExp:void 0,_replacePlaceholdersExpString:void 0},ConfigInterface={get directivePrefix(){return Config.directivePrefix},get placeholderDelimitiers(){return Config.placeholderDelimitiers},get modelsNamesExtension(){return Config.modelsNamesExtension},get viewsNamesExtension(){return Config.viewsNamesExtension},get modelsPath(){return Config.modelsPath},get viewsPath(){return Config.viewsPath},get _getPlaceholdersExp(){return Config._getPlaceholdersExp},get _replacePlaceholdersExpString(){return Config._replacePlaceholdersExpString},set directivePrefix(e){if("string"!=typeof e)throw new Error("Config:directivePrefix : Value must be a String.");if(!(e=e.trim().toLowerCase()).length)throw new Error("Config:directivePrefix : Value can't be an empty String.");if(-1!==e.indexOf("-"))throw new Error('Config:directivePrefix : Value can\'t contain dashes ("-").');if(Util.stringHasSpaces(e))throw new Error("Config:directivePrefix : Value can't contain spaces.");return Config.directivePrefix=e,!0},set placeholderDelimitiers(e){if("string"==typeof e&&(e=[e,e]),!Array.isArray(e))throw new Error("Config:placeholderDelimitiers : Value must be an Array, or a String");if(2!==e.length)throw new Error("Config:placeholderDelimitiers : Array must contain 2 keys.");if("string"!=typeof e[0]||"string"!=typeof e[1])throw new Error("Config:placeholderDelimitiers : Array keys must be String.");if(!(e=e.map(e=>e.trim()))[0].length||!e[1].length)throw new Error("Config:placeholderDelimitiers: Values can't be empty Strings.");if(Object.keys(Bindings.placeholders).length)throw new Error("Config:placeholderDelimitiers: Unbind all active bindings first, to change the delimiters.");Config.placeholderDelimitiers=e;let i="__LEFT_DELIMITER__(.*?)__RIGHT_DELIMITER__";i=(i=i.replace("__LEFT_DELIMITER__",Config.placeholderDelimitiers[0])).replace("__RIGHT_DELIMITER__",Config.placeholderDelimitiers[1]),Config._getPlaceholdersExp=new RegExp(i,"g");let r="__LEFT_DELIMITER__(\\s*__PLACEHOLDER__\\s*)__RIGHT_DELIMITER__";return r=(r=r.replace("__LEFT_DELIMITER__",Config.placeholderDelimitiers[0])).replace("__RIGHT_DELIMITER__",Config.placeholderDelimitiers[1]),Config._replacePlaceholdersExpString=r,!0},set modelsNamesExtension(e){if("string"!=typeof e)throw new Error("Config:modelsNamesExtension : Value must be a String.");if(e=e.trim(),Util.stringHasSpaces(e))throw new Error("Config:modelsNamesExtension : Value can't contain spaces.");return Config.modelsNamesExtension=e,!0},set viewsNamesExtension(e){if("string"!=typeof e)throw new Error("Config:viewsNamesExtension : Value must be a String.");if(e=e.trim(),Util.stringHasSpaces(e))throw new Error("Config:viewsNamesExtension : Value can't contain spaces.");return Config.viewsNamesExtension=e,!0},set modelsPath(e){if("string"!=typeof e)throw new Error("Config:modelsPath : Value must be a String.");if(e=e.trim(),Util.stringHasSpaces(e))throw new Error("Config:modelsPath : Value can't contain spaces.");return"/"!==e.slice(-1)&&(e+="/"),Config.modelsPath=e,!0},set viewsPath(e){if("string"!=typeof e)throw new Error("Config:viewsPath : Value must be a String.");if(e=e.trim(),Util.stringHasSpaces(e))throw new Error("Config:viewsPath : Value can't contain spaces.");return"/"!==e.slice(-1)&&(e+="/"),Config.viewsPath=e,!0}};ConfigInterface.placeholderDelimitiers=Config.placeholderDelimitiers;export{Config,ConfigInterface};